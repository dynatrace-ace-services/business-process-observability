{"version":"5","defaultTimeframe":{"from":"now-24h","to":"now","details":{"from":{"type":"expression","normalized":"now-24h","date":"2024-01-19T09:12:33.790Z"},"to":{"type":"expression","normalized":"now","date":"2024-01-20T09:12:33.790Z"}}},"sections":[{"id":"e56ae578-2e12-440e-8692-bd1b7229ee5d","type":"markdown","markdown":"# Unlock the Business Process Observability with GRAIL\n- this notebook contains DQL examples\n\n---\n---\nThis is a sample for educational purposes only and not officially part of the product.\nIf you have question, leave a comment on the github repo.\n\nFor more information about Dynatrace please visit [dynatrace.com](https://www.dynatrace.com)\n\n---\n---"},{"id":"15a33c1d-dfef-40b4-967a-8b2ce149c2fb","type":"markdown","markdown":"## 1 - Business Process Observability\nFor all your business processes, you can use\n- [Business Flow apps](https://www.dynatrace.com/hub/detail/business-flow/)\n- DQL (see example below : DQL request 1)"},{"id":"cbe4bc81-fd4f-464c-8302-8195918ab9a2","type":"markdown","markdown":"![business_process](https://github.com/dynatrace-ace-services/business-process-observability/blob/main/assets/business_events.png?raw=true)"},{"id":"840794cc-9813-4f3c-b067-57d4990ed080","type":"markdown","markdown":"## Example of Business Process Observability with Business Flow\n- eCommerce performance Observability from the order to the delivery\n- for more detail click [here](https://www.dynatrace.com/hub/detail/business-flow/)\n\n![businessflow](https://github.com/dynatrace-ace-services/business-process-observability/blob/main/assets/business_flow_funnel.png?raw=true)"},{"id":"1fba8d5e-535e-409a-ab4e-81dbf0eee0ae","type":"markdown","markdown":"## Example of Business Process Observability with DQL\n- **DQL request 1** = observability of a full production line"},{"id":"51c71058-a3f9-4d63-a0b7-8293f0e3e0db","type":"dql","showTitle":false,"state":{"input":{"value":"//Exemple of bizevents for an order_ID\nfetch bizevents\n| filter contains(event.type, \"production_line.\")\n| filter order_ID == \"1095684\"\n| fields timestamp, event.kind, order_ID, event.type, status = if (isNotNull(status.step1), concat(\"status.step1=\", status.step1), else: if (isNotNull(status.step2), concat(\"status.step2=\", status.step2), else: if (isNotNull(status.step3), concat(\"status.step3=\", status.step3), else: if (isNotNull(status.step4), concat(\"status.step4=\", status.step4), else: if (isNotNull(status.step5), concat(\"status.step5=\", status.step5))))))\n| sort timestamp asc","timeframe":{"from":"now-24h","to":"now","details":{"from":{"type":"expression","normalized":"now-24h","date":"2024-01-19T09:07:05.234Z"},"to":{"type":"expression","normalized":"now","date":"2024-01-20T09:07:05.234Z"}}}},"visualization":"table","state":"success","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":"browser.name","categoryAxisLabel":"browser.name","valueAxis":"browser.version","valueAxisLabel":"browser.version"},"fieldMapping":{"timestamp":"timestamp","fields":["browser.name"],"values":["browser.version"]}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center","isBackgroundThresholdActive":false},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":0,"columnWidths":{"[\"timestamp\"]":164,"[\"order_ID\"]":104,"[\"event.name\"]":175,"[\"status_step1\"]":138,"[\"status_step2\"]":133,"[\"status_step3\"]":133,"[\"status_step4\"]":133,"[\"status_step5\"]":437.375,"[\"error\"]":110.1388931274414,"[\"status\"]":88.54166412353516}}},"result":{"code":200,"value":{"records":[{"timestamp":"2024-01-19T21:49:08.316400000+01:00","event.kind":"BIZ_EVENT","order_ID":"1095684","event.type":"production_line.step1","status":"status.step1=OK"},{"timestamp":"2024-01-19T22:22:34.210400300+01:00","event.kind":"BIZ_EVENT","order_ID":"1095684","event.type":"production_line.step2","status":"status.step2=OK"},{"timestamp":"2024-01-19T22:46:50.794600200+01:00","event.kind":"BIZ_EVENT","order_ID":"1095684","event.type":"production_line.step3","status":"status.step3=OK"},{"timestamp":"2024-01-19T23:19:56.820900000+01:00","event.kind":"BIZ_EVENT","order_ID":"1095684","event.type":"production_line.step4","status":"status.step4=OK"},{"timestamp":"2024-01-20T09:56:29.868400000+01:00","event.kind":"BIZ_EVENT","order_ID":"1095684","event.type":"production_line.step5","status":"status.step5=OK"}],"metadata":{"grail":{"canonicalQuery":"fetch bizevents\n| filter contains(event.type, \"production_line.\")\n| filter order_ID == \"1095684\"\n| fields timestamp, event.kind, order_ID, event.type, {if(isNotNull(status.step1), concat(\"status.step1=\", status.step1), else:if(isNotNull(status.step2), concat(\"status.step2=\", status.step2), else:if(isNotNull(status.step3), concat(\"status.step3=\", status.step3), else:if(isNotNull(status.step4), concat(\"status.step4=\", status.step4), else:if(isNotNull(status.step5), concat(\"status.step5=\", status.step5)))))), alias:status}\n| sort timestamp, direction:\"ascending\"","timezone":"Europe/Paris","query":"//Exemple of bizevents for an order_ID\nfetch bizevents\n| filter contains(event.type,  \"production_line.\")\n| filter order_ID == \"1095684\"\n| fields timestamp, event.kind, order_ID, event.type, status = if (isNotNull(status.step1), concat(\"status.step1=\", status.step1), else: if (isNotNull(status.step2), concat(\"status.step2=\", status.step2), else: if (isNotNull(status.step3), concat(\"status.step3=\", status.step3), else: if (isNotNull(status.step4), concat(\"status.step4=\", status.step4), else: if (isNotNull(status.step5), concat(\"status.step5=\", status.step5))))))\n| sort timestamp asc","scannedRecords":32,"dqlVersion":"V1_0","scannedBytes":5922,"analysisTimeframe":{"start":"2024-01-19T09:07:06.225Z","end":"2024-01-20T09:07:06.225Z"},"locale":"","executionTimeMilliseconds":80,"notifications":[],"queryId":"74a7ff65-380d-4aa8-9f06-9e158e2fdd1b","sampled":false}},"types":[{"mappings":{"timestamp":{"type":"timestamp"},"event.kind":{"type":"string"},"order_ID":{"type":"string"},"event.type":{"type":"string"},"status":{"type":"string"}},"indexRange":[0,4]}]},"notifications":[],"dateTime":"2024-01-20T09:07:06.224Z","input":{"value":"//Exemple of bizevents for an order_ID\nfetch bizevents\n| filter contains(event.type,  \"production_line.\")\n| filter order_ID == \"1095684\"\n| fields timestamp, event.kind, order_ID, event.type, status = if (isNotNull(status.step1), concat(\"status.step1=\", status.step1), else: if (isNotNull(status.step2), concat(\"status.step2=\", status.step2), else: if (isNotNull(status.step3), concat(\"status.step3=\", status.step3), else: if (isNotNull(status.step4), concat(\"status.step4=\", status.step4), else: if (isNotNull(status.step5), concat(\"status.step5=\", status.step5))))))\n| sort timestamp asc","timeframe":{"from":"now-24h","to":"now","details":{"from":{"type":"expression","normalized":"now-24h","date":"2024-01-19T09:07:05.234Z"},"to":{"type":"expression","normalized":"now","date":"2024-01-20T09:07:05.234Z"}}}}}},"height":198,"showInput":false},{"id":"6c6eaa3d-554f-4281-aaf1-a3bbe8ca30ee","type":"dql","showTitle":false,"state":{"input":{"value":"//DQL Request 1 - Production line Observability\nfetch bizevents\n| filter contains(event.type, \"production_line.\")\n| fieldsAdd timestamp1 = if (event.type == \"production_line.step1\", timestamp)\n| fieldsAdd timestamp5 = if (event.type == \"production_line.step5\", timestamp)\n\n// correaltion based on order_ID\n| summarize{  startTime = takeFirst(timestamp1), endTime = if( isNotNull(takeFirst(timestamp5)), takeFirst(timestamp5), else:\"\" ),\n      status.step1 = takeFirst(status.step1),\n      status.step2 = takeFirst(status.step2),\n      status.step3 = takeFirst(status.step3),\n      status.step4 = takeFirst(status.step4),\n      status.step5 = takeFirst(status.step5)\n      },  by: {order_ID}","timeframe":{"from":"now-24h","to":"now","details":{"from":{"type":"expression","normalized":"now-24h","date":"2024-01-17T22:44:04.495Z"},"to":{"type":"expression","normalized":"now","date":"2024-01-18T22:44:04.495Z"}}}},"visualization":"table","state":"success","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":0,"columnWidths":{"[\"order_ID\"]":103.94444274902344,"[\"startTime\"]":175.23611450195312,"[\"endTime\"]":186.81944274902344,"[\"status_step1\"]":132.34722900390625,"[\"status_step2\"]":132.34722900390625,"[\"status_step3\"]":132.34722900390625,"[\"status_step4\"]":132.34722900390625,"[\"status_step5\"]":132.34722900390625}}},"result":{"code":200,"value":{"records":[{"order_ID":"1095684","startTime":"2024-01-19T21:49:08.316400000+01:00","endTime":"2024-01-20T09:56:29.868400000+01:00","status.step1":"OK","status.step2":"OK","status.step3":"OK","status.step4":"OK","status.step5":"OK"},{"order_ID":"1095685","startTime":"2024-01-19T21:52:51.804600000+01:00","endTime":"2024-01-20T09:59:36.736400100+01:00","status.step1":"OK","status.step2":"OK","status.step3":"OK","status.step4":"OK","status.step5":"OK"},{"order_ID":"1095686","startTime":"2024-01-19T22:18:53.587700000+01:00","endTime":"","status.step1":"OK","status.step2":"OK","status.step3":"warning","status.step4":"failed","status.step5":null}],"metadata":{"grail":{"canonicalQuery":"fetch bizevents\n| filter contains(event.type, \"production_line.\")\n| fieldsAdd if(event.type == \"production_line.step1\", timestamp), alias:timestamp1\n| fieldsAdd if(event.type == \"production_line.step5\", timestamp), alias:timestamp5\n| summarize by:{order_ID}, {{takeFirst(timestamp1), alias:startTime}, {if(isNotNull(takeFirst(timestamp5)), takeFirst(timestamp5), else:\"\"), alias:endTime}, {takeFirst(status.step1), alias:status.step1}, {takeFirst(status.step2), alias:status.step2}, {takeFirst(status.step3), alias:status.step3}, {takeFirst(status.step4), alias:status.step4}, {takeFirst(status.step5), alias:status.step5}}","timezone":"Europe/Paris","query":"//DQL Request 1 - Production line Observability\nfetch bizevents\n| filter contains(event.type, \"production_line.\")\n| fieldsAdd timestamp1 = if (event.type == \"production_line.step1\", timestamp)\n| fieldsAdd timestamp5 = if (event.type == \"production_line.step5\", timestamp)\n      \n| summarize{  startTime = takeFirst(timestamp1), endTime = if( isNotNull(takeFirst(timestamp5)), takeFirst(timestamp5), else:\"\" ),\n      status.step1 = takeFirst(status.step1),\n      status.step2 = takeFirst(status.step2),\n      status.step3 = takeFirst(status.step3),\n      status.step4 = takeFirst(status.step4),\n      status.step5 = takeFirst(status.step5)\n      },  by: {order_ID}","scannedRecords":35,"dqlVersion":"V1_0","scannedBytes":14201,"analysisTimeframe":{"start":"2024-01-19T09:54:32.968Z","end":"2024-01-20T09:54:32.968Z"},"locale":"","executionTimeMilliseconds":38,"notifications":[],"queryId":"3bb3f695-bd3e-408a-96a0-855dc984a688","sampled":false}},"types":[{"mappings":{"order_ID":{"type":"string"},"startTime":{"type":"timestamp"},"endTime":{"type":"timestamp"},"status.step1":{"type":"string"},"status.step2":{"type":"string"},"status.step3":{"type":"string"},"status.step4":{"type":"string"},"status.step5":{"type":"string"}},"indexRange":[0,1]},{"mappings":{"order_ID":{"type":"string"},"startTime":{"type":"timestamp"},"endTime":{"type":"string"},"status.step1":{"type":"string"},"status.step2":{"type":"string"},"status.step3":{"type":"string"},"status.step4":{"type":"string"},"status.step5":{"type":"undefined"}},"indexRange":[2,2]}]},"notifications":[],"dateTime":"2024-01-20T09:54:32.966Z","input":{"value":"//DQL Request 1 - Production line Observability\nfetch bizevents\n| filter contains(event.type, \"production_line.\")\n| fieldsAdd timestamp1 = if (event.type == \"production_line.step1\", timestamp)\n| fieldsAdd timestamp5 = if (event.type == \"production_line.step5\", timestamp)\n      \n| summarize{  startTime = takeFirst(timestamp1), endTime = if( isNotNull(takeFirst(timestamp5)), takeFirst(timestamp5), else:\"\" ),\n      status.step1 = takeFirst(status.step1),\n      status.step2 = takeFirst(status.step2),\n      status.step3 = takeFirst(status.step3),\n      status.step4 = takeFirst(status.step4),\n      status.step5 = takeFirst(status.step5)\n      },  by: {order_ID}","timeframe":{"from":"now-24h","to":"now","details":{"from":{"type":"expression","normalized":"now-24h","date":"2024-01-17T22:44:04.495Z"},"to":{"type":"expression","normalized":"now","date":"2024-01-18T22:44:04.495Z"}}}}}},"height":141},{"id":"016b96a4-1399-479f-b7c1-2f890342f07e","type":"markdown","markdown":"# 2 - Observability of a specific use case : Payment delay\n- DQL request 2 = Payment delay performance\n- DQL request 3 = SLO based on Payment delay"},{"id":"c5115638-6b47-4b50-b0a7-e6819ceff03d","type":"markdown","markdown":"![Payment_delay](https://github.com/dynatrace-ace-services/business-process-observability/blob/main/assets/payment_delay.png?raw=true)  "},{"id":"11fe3255-16eb-4b63-857f-29c1ac0da169","type":"markdown","markdown":"## Example of Business Process Observability with DQL\n- **DQL request 2** = Payment delay performance "},{"id":"3bf376f7-5386-4261-8e38-96289dce79e1","type":"dql","showTitle":false,"state":{"input":{"value":"//Exemple of bizevents\nfetch bizevents\n| filter contains(event.type, \"online_betting\")\n| fields timestamp, event.type, betID, runID, winners\n| sort timestamp","timeframe":{"from":"2024-01-19T20:10:00.000Z","to":"2024-01-19T20:20:00.000Z","details":{"from":{"type":"iso8601","normalized":"2024-01-19T20:10:00.000Z","date":"2024-01-19T20:10:00.000Z"},"to":{"type":"iso8601","normalized":"2024-01-19T20:20:00.000Z","date":"2024-01-19T20:20:00.000Z"}}}},"visualization":"table","state":"success","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"fieldMapping":{"timestamp":"timestamp","fields":["event.name"],"values":["winners"]},"categoricalBarChartSettings":{"categoryAxis":"betID","categoryAxisLabel":"betID","valueAxis":"browser.version","valueAxisLabel":"browser.version"}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center","isBackgroundThresholdActive":false},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":0,"columnWidths":{"[\"timestamp\"]":167,"[\"event.name\"]":144,"[\"betID\"]":181,"[\"runID\"]":171,"[\"winners\"]":596.8375244140625,"[\"browser.name\"]":139,"[\"browser.type\"]":131,"[\"browser.user_agent\"]":600,"[\"browser.version\"]":149,"[\"client.ip\"]":99,"[\"dt.rum.application.id\"]":181,"[\"dt.rum.custom_attributes_size\"]":248,"[\"dt.rum.instance.id\"]":387,"[\"dt.rum.schema_version\"]":199,"[\"dt.rum.session.id\"]":298,"[\"event.id\"]":286,"[\"event.kind\"]":114,"[\"event.provider\"]":315,"[\"event.type\"]":225,"[\"geo.city.name\"]":136,"[\"geo.continent.name\"]":175,"[\"geo.country.name\"]":162,"[\"geo.region.name\"]":155,"[\"os.name\"]":102}}},"result":{"code":200,"value":{"records":[{"timestamp":"2024-01-19T21:10:44.015600000+01:00","event.type":"online_betting_notification","betID":"BET_20240118160000","runID":null,"winners":65},{"timestamp":"2024-01-19T21:15:08.238800100+01:00","event.type":"online_betting_processing","betID":"BET_20240118160000","runID":"RUN_2024011800045","winners":null},{"timestamp":"2024-01-19T21:18:28.993100000+01:00","event.type":"online_betting_onlinepayment","betID":null,"runID":"RUN_2024011800045","winners":null}],"metadata":{"grail":{"canonicalQuery":"fetch bizevents\n| filter contains(event.type, \"online_betting\")\n| fields timestamp, event.type, betID, runID, winners\n| sort timestamp","timezone":"Europe/Paris","query":"//Exemple of bizevents\nfetch bizevents\n| filter contains(event.type, \"online_betting\")\n| fields timestamp, event.type, betID, runID, winners\n| sort timestamp","scannedRecords":26,"dqlVersion":"V1_0","scannedBytes":3892,"analysisTimeframe":{"start":"2024-01-19T20:10:00.000Z","end":"2024-01-19T20:20:00.000Z"},"locale":"","executionTimeMilliseconds":22,"notifications":[],"queryId":"9303b006-0ed3-4680-9a2d-efbad3b62180","sampled":false}},"types":[{"mappings":{"timestamp":{"type":"timestamp"},"event.type":{"type":"string"},"betID":{"type":"string"},"runID":{"type":"undefined"},"winners":{"type":"double"}},"indexRange":[0,0]},{"mappings":{"timestamp":{"type":"timestamp"},"event.type":{"type":"string"},"betID":{"type":"string"},"runID":{"type":"string"},"winners":{"type":"undefined"}},"indexRange":[1,1]},{"mappings":{"timestamp":{"type":"timestamp"},"event.type":{"type":"string"},"betID":{"type":"undefined"},"runID":{"type":"string"},"winners":{"type":"undefined"}},"indexRange":[2,2]}]},"notifications":[],"dateTime":"2024-01-20T11:03:26.237Z","input":{"value":"//Exemple of bizevents\nfetch bizevents\n| filter contains(event.type, \"online_betting\")\n| fields timestamp, event.type, betID, runID, winners\n| sort timestamp","timeframe":{"from":"2024-01-19T20:10:00.000Z","to":"2024-01-19T20:20:00.000Z","details":{"from":{"type":"iso8601","normalized":"2024-01-19T20:10:00.000Z","date":"2024-01-19T20:10:00.000Z"},"to":{"type":"iso8601","normalized":"2024-01-19T20:20:00.000Z","date":"2024-01-19T20:20:00.000Z"}}}}}},"height":140,"showInput":false},{"id":"deddf87b-dbfa-4deb-9484-0710a82aaea2","type":"dql","showTitle":false,"state":{"input":{"value":"//DQL Request 2 - Payment delay calculation\nfetch bizevents\n| filter contains(event.type,  \"online_betting\")\n\n// correaltion based on runID\n| summarize {\n    records = if (\n        isNotNull(takeAny(winners)), collectArray(record(betID,start_time=timestamp,winners=winners)),\n        else: record(end_time=takeAny(timestamp),betID=takeAny(betID),winners=takeAny(winners)))\n    }, by:{runID}    \n| expand records\n\n// correaltion based on betID\n| summarize { \n    startTime = takeAny(records[start_time]),runID = takeAny(runID),winners = takeAny(records[winners]), endTime = takeAny(records[end_time])\n    }, by: {betID= records[betID]}\n\n|fields start=toTimestamp(startTime), betID, runID, winners, end=toTimestamp(endTime), payment_delay=(toTimestamp(endTime)-toTimestamp(startTime))","timeframe":{"from":"now-24h","to":"now","details":{"from":{"type":"expression","normalized":"now-24h","date":"2024-01-19T09:11:50.874Z"},"to":{"type":"expression","normalized":"now","date":"2024-01-20T09:11:50.874Z"}}}},"visualization":"table","state":"success","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}},"visualizationSettings":{"chartSettings":{"gapPolicy":"connect","categoricalBarChartSettings":{"categoryAxis":"betID","categoryAxisLabel":"betID","valueAxis":"winners","valueAxisLabel":"winners"},"fieldMapping":{"timestamp":"startTime","fields":["betID"],"values":["winners"]}},"singleValue":{"alignment":"center","label":"","autoscale":true},"table":{"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":0,"columnWidths":{"[\"error\"]":122.13750457763672,"[\"betID\"]":169,"[\"startTime\"]":168,"[\"runID\"]":164,"[\"winners\"]":111,"[\"endTime\"]":592,"[\"start\"]":180,"[\"end\"]":184,"[\"payment_delay\"]":424}}},"result":{"code":200,"value":{"records":[{"start":"2024-01-19T21:10:44.015600000+01:00","betID":"BET_20240118160000","runID":"RUN_2024011800045","winners":65,"end":"2024-01-19T21:15:08.238800100+01:00","payment_delay":"264223200100"},{"start":"2024-01-19T21:27:08.264900000+01:00","betID":"BET_20240118161501","runID":"RUN_2024011800055","winners":47,"end":"2024-01-19T21:34:57.906100200+01:00","payment_delay":"469641200200"},{"start":"2024-01-19T21:44:11.163700000+01:00","betID":"BET_20240118163101","runID":"RUN_2024011800065","winners":118,"end":"2024-01-19T21:52:29.518300200+01:00","payment_delay":"498354600200"}],"metadata":{"grail":{"canonicalQuery":"fetch bizevents\n| filter contains(event.type, \"online_betting\")\n| summarize by:{runID}, if(isNotNull(takeAny(winners)), collectArray(record(betID, start_time = timestamp, winners = winners)), else:record(end_time = takeAny(timestamp), betID = takeAny(betID), winners = takeAny(winners))), alias:records\n| expand records\n| summarize by:{records[betID], alias:betID}, {{takeAny(records[start_time]), alias:startTime}, {takeAny(runID), alias:runID}, {takeAny(records[winners]), alias:winners}, {takeAny(records[end_time]), alias:endTime}}\n| fields {toTimestamp(startTime), alias:start}, betID, runID, winners, {toTimestamp(endTime), alias:end}, {toTimestamp(endTime) - toTimestamp(startTime), alias:payment_delay}","timezone":"Europe/Paris","query":"//DQL Request 2 - Payment delay calculation\nfetch bizevents\n| filter contains(event.type,  \"online_betting\")\n\n// correaltion based on runID\n| summarize {\n    records = if (\n        isNotNull(takeAny(winners)), collectArray(record(betID,start_time=timestamp,winners=winners)),\n        else: record(end_time=takeAny(timestamp),betID=takeAny(betID),winners=takeAny(winners)))\n    }, by:{runID}    \n| expand records\n\n// correaltion based on betID\n| summarize { \n    startTime = takeAny(records[start_time]),runID = takeAny(runID),winners = takeAny(records[winners]), endTime = takeAny(records[end_time])\n    }, by: {betID= records[betID]}\n\n|fields start=toTimestamp(startTime), betID, runID, winners, end=toTimestamp(endTime), payment_delay=(toTimestamp(endTime)-toTimestamp(startTime))\n","scannedRecords":32,"dqlVersion":"V1_0","scannedBytes":9603,"analysisTimeframe":{"start":"2024-01-19T09:11:51.708Z","end":"2024-01-20T09:11:51.708Z"},"locale":"","executionTimeMilliseconds":123,"notifications":[],"queryId":"eb0b66d1-59a4-4210-a5e0-64c605fc5df9","sampled":false}},"types":[{"mappings":{"start":{"type":"timestamp"},"betID":{"type":"string"},"runID":{"type":"string"},"winners":{"type":"double"},"end":{"type":"timestamp"},"payment_delay":{"type":"duration"}},"indexRange":[0,2]}]},"notifications":[],"dateTime":"2024-01-20T09:11:51.707Z","input":{"value":"//DQL Request 2 - Payment delay calculation\nfetch bizevents\n| filter contains(event.type,  \"online_betting\")\n\n// correaltion based on runID\n| summarize {\n    records = if (\n        isNotNull(takeAny(winners)), collectArray(record(betID,start_time=timestamp,winners=winners)),\n        else: record(end_time=takeAny(timestamp),betID=takeAny(betID),winners=takeAny(winners)))\n    }, by:{runID}    \n| expand records\n\n// correaltion based on betID\n| summarize { \n    startTime = takeAny(records[start_time]),runID = takeAny(runID),winners = takeAny(records[winners]), endTime = takeAny(records[end_time])\n    }, by: {betID= records[betID]}\n\n|fields start=toTimestamp(startTime), betID, runID, winners, end=toTimestamp(endTime), payment_delay=(toTimestamp(endTime)-toTimestamp(startTime))\n","timeframe":{"from":"now-24h","to":"now","details":{"from":{"type":"expression","normalized":"now-24h","date":"2024-01-19T09:11:50.874Z"},"to":{"type":"expression","normalized":"now","date":"2024-01-20T09:11:50.874Z"}}}}}},"height":158,"drilldownPath":[]},{"id":"9266831d-0de7-4e98-ae1d-27a0abe4ce70","type":"markdown","markdown":"## Example of Business Process Observability with DQL\n- **DQL request 3** = SLO based on Payment delay"},{"id":"abba5386-feec-456d-bdeb-c10e190935fe","type":"dql","showTitle":false,"state":{"input":{"value":"//DQL Request 3 - SLO calculation\nfetch bizevents\n| filter contains(event.type,  \"online_betting\")\n\n// correlation based on runID\n| summarize {\n    records = if (\n        isNotNull(takeAny(winners)), collectArray(record(betID,start_time=timestamp,winners=winners)),\n        else: record(end_time=takeAny(timestamp),betID=takeAny(betID),winners=takeAny(winners)))\n    }, by:{runID}    \n| expand records\n\n// correlation based on betID\n| summarize { \n    startTime = takeAny(records[start_time]),runID = takeAny(runID),winners = takeAny(records[winners]), endTime = takeAny(records[end_time])\n    }, by: {betID= records[betID]}\n\n|fields start=toTimestamp(startTime), runID, betID, winners, end=toTimestamp(endTime), payment_delay=(toTimestamp(endTime)-toTimestamp(startTime))\n\n//SLO Calculation\n| summarize nbr_failed=countIf(payment_delay > 8m), total=count()\n| fieldsAdd SLO=(toDouble(total - nbr_failed) * 100 / total), target=99\n| fields SLO, target, SLO_success = if((SLO < target),false, else: true),total, nbr_failed","timeframe":{"from":"now-24h","to":"now","details":{"from":{"type":"expression","normalized":"now-24h","date":"2024-01-19T09:12:33.790Z"},"to":{"type":"expression","normalized":"now","date":"2024-01-20T09:12:33.790Z"}}}},"visualization":"table","state":"success","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":0,"columnWidths":{"[\"error\"]":110.13750457763672,"[\"SLO\"]":174,"[\"target\"]":173,"[\"SLO_success\"]":187,"[\"nbr_failed\"]":30,"[\"total\"]":122}}},"result":{"code":200,"value":{"records":[{"SLO":66.66666666666667,"target":"99","SLO_success":false,"total":"3","nbr_failed":"1"}],"metadata":{"grail":{"canonicalQuery":"fetch bizevents\n| filter contains(event.type, \"online_betting\")\n| summarize by:{runID}, if(isNotNull(takeAny(winners)), collectArray(record(betID, start_time = timestamp, winners = winners)), else:record(end_time = takeAny(timestamp), betID = takeAny(betID), winners = takeAny(winners))), alias:records\n| expand records\n| summarize by:{records[betID], alias:betID}, {{takeAny(records[start_time]), alias:startTime}, {takeAny(runID), alias:runID}, {takeAny(records[winners]), alias:winners}, {takeAny(records[end_time]), alias:endTime}}\n| fields {toTimestamp(startTime), alias:start}, runID, betID, winners, {toTimestamp(endTime), alias:end}, {toTimestamp(endTime) - toTimestamp(startTime), alias:payment_delay}\n| summarize {countIf(payment_delay > 8m), alias:nbr_failed}, {count(), alias:total}\n| fieldsAdd {toDouble(total - nbr_failed) * 100 / total, alias:SLO}, {99, alias:target}\n| fields SLO, target, {if(SLO < target, FALSE, else:TRUE), alias:SLO_success}, total, nbr_failed","timezone":"Europe/Paris","query":"//DQL Request 3 - SLO calculation\nfetch bizevents\n| filter contains(event.type,  \"online_betting\")\n\n// correlation based on runID\n| summarize {\n    records = if (\n        isNotNull(takeAny(winners)), collectArray(record(betID,start_time=timestamp,winners=winners)),\n        else: record(end_time=takeAny(timestamp),betID=takeAny(betID),winners=takeAny(winners)))\n    }, by:{runID}    \n| expand records\n\n// correlation based on betID\n| summarize { \n    startTime = takeAny(records[start_time]),runID = takeAny(runID),winners = takeAny(records[winners]), endTime = takeAny(records[end_time])\n    }, by: {betID= records[betID]}\n\n|fields start=toTimestamp(startTime), runID, betID, winners, end=toTimestamp(endTime), payment_delay=(toTimestamp(endTime)-toTimestamp(startTime))\n\n//SLO Calculation\n| summarize nbr_failed=countIf(payment_delay > 8m), total=count()\n| fieldsAdd SLO=(toDouble(total - nbr_failed) * 100 / total), target=99\n| fields SLO, target, SLO_success = if((SLO < target),false, else: true),total, nbr_failed","scannedRecords":32,"dqlVersion":"V1_0","scannedBytes":9603,"analysisTimeframe":{"start":"2024-01-19T09:15:57.715Z","end":"2024-01-20T09:15:57.715Z"},"locale":"","executionTimeMilliseconds":149,"notifications":[],"queryId":"2fe5cabd-9fea-4707-96e7-3ef9cc3da4e0","sampled":false}},"types":[{"mappings":{"SLO":{"type":"double"},"target":{"type":"long"},"SLO_success":{"type":"boolean"},"total":{"type":"long"},"nbr_failed":{"type":"long"}},"indexRange":[0,0]}]},"notifications":[],"dateTime":"2024-01-20T09:15:57.710Z","input":{"value":"//DQL Request 3 - SLO calculation\nfetch bizevents\n| filter contains(event.type,  \"online_betting\")\n\n// correlation based on runID\n| summarize {\n    records = if (\n        isNotNull(takeAny(winners)), collectArray(record(betID,start_time=timestamp,winners=winners)),\n        else: record(end_time=takeAny(timestamp),betID=takeAny(betID),winners=takeAny(winners)))\n    }, by:{runID}    \n| expand records\n\n// correlation based on betID\n| summarize { \n    startTime = takeAny(records[start_time]),runID = takeAny(runID),winners = takeAny(records[winners]), endTime = takeAny(records[end_time])\n    }, by: {betID= records[betID]}\n\n|fields start=toTimestamp(startTime), runID, betID, winners, end=toTimestamp(endTime), payment_delay=(toTimestamp(endTime)-toTimestamp(startTime))\n\n//SLO Calculation\n| summarize nbr_failed=countIf(payment_delay > 8m), total=count()\n| fieldsAdd SLO=(toDouble(total - nbr_failed) * 100 / total), target=99\n| fields SLO, target, SLO_success = if((SLO < target),false, else: true),total, nbr_failed","timeframe":{"from":"now-24h","to":"now","details":{"from":{"type":"expression","normalized":"now-24h","date":"2024-01-19T09:12:33.790Z"},"to":{"type":"expression","normalized":"now","date":"2024-01-20T09:12:33.790Z"}}}}}},"height":68},{"id":"cff907cf-4f07-49e7-b324-df11735e8c1e","type":"markdown","markdown":"## Example of Business Process Observability with SRG\n- Copy / Paste the previous DQL request (`fields SLO` only) in [Site Reliability Gardian apps](https://www.dynatrace.com/hub/detail/site-reliability-guardian/)\n![Process Observability with SRG](https://github.com/dynatrace-ace-services/business-process-observability/blob/main/assets/business_process_observability_with_srg.png?raw=true)"},{"id":"ac45c46d-a1de-448f-9cd6-52ba480e52e0","type":"markdown","markdown":"## Example of Business Process Observability with Workflow\n- From the previous SRG configuration, create your automation with [Workflow](https://www.dynatrace.com/hub/detail/automations/?query=wor&filter=all) \n![Process Observability with Workflow](https://github.com/dynatrace-ace-services/business-process-observability/blob/main/assets/business_process_observability_with_workflow.png?raw=true)\n\n- You can also create your workflow directly from the DQL request 3 :  \n![workflow](https://github.com/dynatrace-ace-services/business-process-observability/blob/main/assets/workflow.png?raw=true)"}]}